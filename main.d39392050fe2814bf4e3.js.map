{"version":3,"sources":["webpack:///./js/timer.js"],"names":["pad","value","String","padStart","getTimeComponents","time","days","Math","floor","hours","mins","secs","refs","spanDay","document","querySelector","spanHours","spanMins","spanSecs","setInterval","Date","getTime","now","textContent","timer"],"mappings":"6JAEA,SAASA,EAAIC,GACT,OAAOC,iBAAOD,GAAOE,SAAS,EAAG,KAMrC,SAASC,EAAkBC,GACzB,IALeJ,EAUf,MAAO,CAAEK,MAVML,EAKMM,KAAKC,MAAMH,EAAO,OAJ9BH,iBAAOD,GAAOE,SAAS,EAAG,MASpBM,MAJDT,EAAIO,KAAKC,MAAOH,EAAO,MAAR,OAIPK,KAHTV,EAAIO,KAAKC,MAAOH,EAAO,KAAR,MAGAM,KAFfX,EAAIO,KAAKC,MAAOH,EAAO,IAAe,OAKrD,IAAMO,EAAO,CACTC,QAASC,SAASC,cAAc,uBAChCC,UAAWF,SAASC,cAAc,wBAClCE,SAAUH,SAASC,cAAc,uBACjCG,SAAUJ,SAASC,cAAc,yBAMvB,WAGVI,aAAY,WAER,IAaR,EAA2Bb,EAAMG,EAAOC,EAAMC,EARlCN,EAAOD,EALO,IAAIgB,KAAK,gBAAgBC,UACzBD,KAAKE,OAYJhB,GAA3B,EAPsBD,GAOKC,KAAMG,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAC1CC,EAAKC,QAAQU,YAAb,GAA8BjB,EAC9BM,EAAKI,UAAUO,YAAf,GAAgCd,EAChCG,EAAKK,SAASM,YAAd,GAA+Bb,EAC/BE,EAAKM,SAASK,YAAd,GAA+BZ,IAT5B,MAGPa,K","file":"main.d39392050fe2814bf4e3.js","sourcesContent":["import { String } from \"core-js\";\r\n\r\nfunction pad(value) {\r\n    return String(value).padStart(2, '0')\r\n}\r\nfunction padDays(value) {\r\n    return String(value).padStart(3, '0')\r\n}\r\n\r\nfunction getTimeComponents(time) {\r\n  const days = padDays(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n  const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n  return { days, hours, mins, secs };\r\n}\r\n\r\nconst refs = {\r\n    spanDay: document.querySelector('[data-value=\"days\"]'),\r\n    spanHours: document.querySelector('[data-value=\"hours\"]'),\r\n    spanMins: document.querySelector('[data-value=\"mins\"]'),\r\n    spanSecs: document.querySelector('[data-value=\"secs\"]')\r\n}\r\n\r\n// const CountdownTimer = {  \r\n\r\n// }\r\nconst timer = {\r\n  start() {\r\n    // const startTime = Date.now();\r\n    setInterval(() => {\r\n        // console.log(new Date('Jul 17, 2019').getTime());\r\n        const finalDate = new Date('Jul 17, 2021').getTime()\r\n      const currentTime = Date.now();\r\n    //   const deltaTime = currentTime - startTime;\r\n      const velTime = finalDate - currentTime;\r\n      \r\n      const time = getTimeComponents(velTime);\r\n      updateClockface(time)\r\n    //   console.log(`${ days}:${hours}:${mins}:${secs}`);\r\n    }, 1000);\r\n  },\r\n};\r\ntimer.start();\r\n\r\nfunction updateClockface({ days, hours, mins, secs }) {\r\n    refs.spanDay.textContent = `${days}`;\r\n    refs.spanHours.textContent = `${hours}`;\r\n    refs.spanMins.textContent = `${mins}`;\r\n    refs.spanSecs.textContent = `${secs}`;\r\n\r\n}\r\n\r\n// new CountdownTimer({\r\n//     selector: '#timer-1',\r\n//     targetDate: new Date('Jul 17, 2019'),\r\n//   });\r\n"],"sourceRoot":""}